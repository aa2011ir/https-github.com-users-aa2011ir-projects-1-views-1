#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

//piece  base, turretl, sleevel, barrell, flarel, turretr, sleever, barrelr, flarer, 
  //     turretf, sleevef, barrelf, flaref, thrustrr, thrustrl, thrustfr, thrustfl, 
    //   thrustrra, thrustrla, thrustfra, thrustfla;
      
piece base, aimy,turretf, sleevef, flaref,
		turretaa, sleeveaa, flareaa1, flareaa2, flareaa3, flareaa4, flareaa5, flareaa6, flareaa7, flareaa8, lightaa, aimfromaa,
		turretr1, sleever1, barrelr1, flarer1, turretr2, sleever2, barrelr2, flarer2,
		turretl1, sleevel1, barrell1, flarel1, turretl2, sleevel2, barrell2, flarel2, 
		thrustrr, thrustrl, thrustfr, thrustfl, thrustrra, thrustrla, thrustfra, thrustfla;

static-var  restore_delay, aa_gun, wpn1_lasthead;

// Signal definitions
#define SIG_AIM				4
#define SIG_AIM_2			8
#define SIG_AIM_3			16
#define SIG_AIM_4			32
#define SIG_AIM_5			64
#define SIG_AIM_6			128

#define BASEPIECE base
#define HITSPEED <55.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 5
#define MAXTILT 100

#define IDLEHOVERSCALE 32
#define IDLEHOVERSPEED 60
#define IDLEBASEPIECE base
//#include "idlehover.h"

static-var  Stunned;
ExecuteRestoreAfterDelay()
{
    if (Stunned) {
        return (1);
    }
	
	
	turn turretaa to y-axis <0> speed <200.00000>;
	turn sleeveaa to x-axis <0.00000> speed <200.00000>;
	
	
	turn turretf to x-axis <0> speed <200.000000>;
	turn turretf to y-axis <0> speed <200.000000>;
	
	
	turn turretr1 to x-axis <0> speed <200.000000>;
	turn turretr1 to y-axis <0> speed <200.000000>;
	turn turretr2 to x-axis <0> speed <200.000000>;
	turn turretr2 to y-axis <0> speed <200.000000>;
	turn turretl1 to x-axis <0> speed <200.000000>;
	turn turretl1 to y-axis <0> speed <200.000000>;
	turn turretl2 to x-axis <0> speed <200.000000>;
	turn turretl2 to y-axis <0> speed <200.000000>;

	wpn1_lasthead = 1000000;
	turn base to y-axis <0.000000> speed <250.000000>;
	turn base to x-axis <0.000000> speed <250.000000>;

}
SetStunned(State)
{
    Stunned = State;
	if (!Stunned) {
	    start-script ExecuteRestoreAfterDelay();
	}
}
RestoreAfterDelay()
{
	sleep restore_delay;
	start-script ExecuteRestoreAfterDelay();
}

lua_FlameShot(weapon) //Distortion and lups flame effect
{
  return 0;
}

Create()
{
	hide thrustrra;
	hide thrustfra;
	hide thrustrla;
	hide thrustfla;
	hide flaref;
	hide flarel1;
	hide flarel2;
	hide flarer1;
	hide flarer2;
	
	turn turretf to x-axis <45> speed <200.000000>;
	turn turretf to y-axis <0> speed <200.000000>;
	
	
	turn turretr1 to x-axis <45> speed <200.000000>;
	turn turretr1 to y-axis <-90> speed <200.000000>;
	turn turretr2 to x-axis <45> speed <200.000000>;
	turn turretr2 to y-axis <-90> speed <200.000000>;
	turn turretl1 to x-axis <45> speed <200.000000>;
	turn turretl1 to y-axis <90> speed <200.000000>;
	turn turretl2 to x-axis <45> speed <200.000000>;
	turn turretl2 to y-axis <90> speed <200.000000>;


	aa_gun = 0;
	wpn1_lasthead = 1000000;
	
	turn thrustrra to x-axis <-90> now; 
	turn thrustfra to x-axis <-90> now; 
	turn thrustrla to x-axis <-90> now; 
	turn thrustfla to x-axis <-90> now; 
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	//start-script IdleHover();
}

Activate()
{
	show thrustrra;
	show thrustfra;
	show thrustrla;
	show thrustfla;
}

Deactivate()
{
	hide thrustrra;
	hide thrustfra;
	hide thrustrla;
	hide thrustfla;
}

SweetSpot(piecenum)
{
	piecenum = aimy;
}

//flamer
QueryPrimary(piecenum)
{
	piecenum = flaref;
}
//aa

QuerySecondary(piecenum)
{
	if( aa_gun == 1 ) piecenum = flareaa1;
	if( aa_gun == 2 ) piecenum = flareaa2; 
	if( aa_gun == 3 ) piecenum = flareaa3;
	if( aa_gun == 4 ) piecenum = flareaa1;
	if( aa_gun == 5 ) piecenum = flareaa2; 
	if( aa_gun == 6 ) piecenum = flareaa3;
	if( aa_gun == 7 ) piecenum = flareaa1;
	if( aa_gun == 8 ) piecenum = flareaa2; 
	
	return (0);
}


//sidelasers
QueryWeapon3(piecenum)
{
	piecenum = flarer1;
}
QueryWeapon4(piecenum)
{
	piecenum = flarer2;
}
QueryWeapon5(piecenum)
{
	piecenum = flarel1;
}
QueryWeapon6(piecenum)
{
	piecenum = flarel2;
}
AimFromWeapon3(piecenum)
{
	piecenum = barrelr1;
}
AimFromWeapon4(piecenum)
{
	piecenum = barrelr2;
}
AimFromWeapon5(piecenum)
{
	piecenum = barrell1;
}
AimFromWeapon6(piecenum)
{
	piecenum = barrell2;
}

//flamer

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	
	turn turretf to x-axis 0-pitch speed <200.000000>;
	turn turretf to y-axis heading speed <200.000000>;
	if (((get ABS(wpn1_lasthead - heading)) > 65536) OR(((get ABS(wpn1_lasthead - heading)) > 1300) AND ((get ABS(wpn1_lasthead - heading)) < 64236)))
	{
		wpn1_lasthead = 1000000;
		wait-for-turn turretf around y-axis;
		wait-for-turn turretf around x-axis;
	}
	wpn1_lasthead = heading;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	return (1);
}
Shot1() {
	call-script lua_FlameShot(1);
	emit-sfx 1024 + 0 from flaref;
}
//aa

AimSecondary(heading, pitch)
{
	signal SIG_AIM_2;
	set-signal-mask SIG_AIM_2;

	turn turretaa to y-axis heading speed <450.00000>;
	turn sleeveaa to x-axis <0.00000> - pitch speed <450.00000>;
	wait-for-turn sleeveaa around z-axis;
	wait-for-turn turretaa around y-axis;
	start-script RestoreAfterDelay();//todo, split these
	return (1);
}


FireSecondary()
{
	++aa_gun;
	if( aa_gun == 9 )
	{
		aa_gun = flareaa1;
	}
	return (0);
}


//sidelasers


AimWeapon3(heading, pitch)
{
	signal SIG_AIM_3;
	set-signal-mask SIG_AIM_3;


	turn turretr1 to x-axis 0-pitch speed <200.000000>;
	turn turretr1 to y-axis heading speed <200.000000>;
	wait-for-turn turretr1 around x-axis;
	wait-for-turn turretr1 around y-axis;
	return (1);
}

FireWeapon3()
{
	sleep 100;
}


AimWeapon4(heading, pitch)
{
	signal SIG_AIM_4;
	set-signal-mask SIG_AIM_4;

	turn turretr2 to x-axis 0-pitch speed <200.000000>;
	turn turretr2 to y-axis heading speed <200.000000>;
	wait-for-turn turretr2 around x-axis;
	wait-for-turn turretr2 around y-axis;
	return (1);
}

FireWeapon4()
{
	sleep 100;
}

AimWeapon5(heading, pitch)
{
	signal SIG_AIM_5;
	set-signal-mask SIG_AIM_5;

	turn turretl1 to x-axis 0-pitch speed <200.000000>;
	turn turretl1 to y-axis heading speed <200.000000>;
	wait-for-turn turretl1 around x-axis;
	wait-for-turn turretl1 around y-axis;
	return (1);
}

FireWeapon5()
{
	sleep 100;
}


AimWeapon6(heading, pitch)
{
	signal SIG_AIM_6;
	set-signal-mask SIG_AIM_6;

	turn turretl2 to x-axis 0-pitch speed <200.000000>;
	turn turretl2 to y-axis heading speed <200.000000>;
	wait-for-turn turretl2 around x-axis;
	wait-for-turn turretl2 around y-axis;
	return (1);
}

FireWeapon6()
{
	sleep 100;
}



SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1 * 2;
}

StartMoving()
{
	sleep 1000;
}

StopMoving()
{
}

MoveRate0()
{
	turn thrustrr to x-axis <0.000000> speed <80.000000>;
	turn thrustrl to x-axis <0.000000> speed <80.000000>;
	turn thrustfr to x-axis <0.000000> speed <80.000000>;
	turn thrustfl to x-axis <0.000000> speed <80.000000>;
}

MoveRate1()
{
	turn thrustrr to x-axis <8.000000> speed <60.000000>;
	turn thrustrl to x-axis <8.000000> speed <60.000000>;
	turn thrustfr to x-axis <8.000000> speed <60.000000>;
	turn thrustfl to x-axis <8.000000> speed <60.000000>;
}

MoveRate2()
{
	turn thrustrr to x-axis <18.000000> speed <45.000000>;
	turn thrustrl to x-axis <18.000000> speed <45.000000>;
	turn thrustfr to x-axis <18.000000> speed <45.000000>;
	turn thrustfl to x-axis <18.000000> speed <45.000000>;
}

MoveRate3()
{
	turn thrustrr to x-axis <0.000000> speed <70.000000>;
	turn thrustrl to x-axis <0.000000> speed <70.000000>;
	turn thrustfr to x-axis <0.000000> speed <70.000000>;
	turn thrustfl to x-axis <0.000000> speed <70.000000>;
}


Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY;
		explode thrustfl type BITMAPONLY;
		explode thrustfla type BITMAPONLY;
		explode thrustrl type BITMAPONLY;
		explode thrustrla type BITMAPONLY;
		explode thrustfr type BITMAPONLY;
		explode thrustfra type BITMAPONLY;
		explode thrustrr type BITMAPONLY;
		explode thrustrra type BITMAPONLY;
		explode turretr1 type BITMAPONLY;
		explode sleever1 type BITMAPONLY;
		explode barrelr1 type FIRE | SMOKE | FALL;
		explode flarer1 type BITMAPONLY;
		explode turretl1 type BITMAPONLY;
		explode sleevel1 type BITMAPONLY;
		explode barrell1 type BITMAPONLY;
		explode flarel1 type BITMAPONLY;
		explode turretr2 type BITMAPONLY;
		explode sleever2 type BITMAPONLY;
		explode barrelr2 type BITMAPONLY;
		explode flarer2 type BITMAPONLY;
		explode turretl2 type BITMAPONLY;
		explode sleevel2 type BITMAPONLY;
		explode barrell2 type BITMAPONLY;
		explode flarel2 type BITMAPONLY;
		explode turretaa type BITMAPONLY;
		explode sleeveaa type BITMAPONLY;
		explode flareaa1 type BITMAPONLY;
		explode flareaa2 type BITMAPONLY;
		explode flareaa3 type BITMAPONLY;
		explode flareaa4 type BITMAPONLY;
		explode flareaa5 type BITMAPONLY;
		explode flareaa6 type BITMAPONLY;
		explode flareaa7 type BITMAPONLY;
		explode flareaa8 type BITMAPONLY;
		explode lightaa type BITMAPONLY;
		explode aimfromaa type BITMAPONLY;
		explode aimy type BITMAPONLY;
		explode turretf type BITMAPONLY;
		explode sleevef type BITMAPONLY;
		explode flaref type BITMAPONLY;
		return(0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY;
		explode thrustfl type FIRE | SMOKE | FALL;
		explode thrustfla type FALL;
		explode thrustrl type FIRE | SMOKE | FALL;
		explode thrustrla type FIRE | SMOKE | FALL;
		explode thrustfr type FIRE | SMOKE | FALL;
		explode thrustfra type FALL;
		explode thrustrr type FIRE | SMOKE | FALL;
		explode thrustrra type FALL;
		explode turretr1 type FIRE | SMOKE | FALL;
		explode sleever1 type FIRE | SMOKE | FALL;
		explode barrelr1 type FALL;
		explode flarer1 type FIRE | SMOKE | FALL;
		explode turretl1 type FIRE | SMOKE | FALL;
		explode sleevel1 type FALL;
		explode barrell1 type FIRE | SMOKE | FALL;
		explode flarel1 type FALL;
		explode turretr2 type FALL;
		explode sleever2 type FIRE | SMOKE | FALL;
		explode barrelr2 type FIRE | SMOKE | FALL;
		explode flarer2 type FALL;
		explode turretl2 type FALL;
		explode sleevel2 type FALL;
		explode barrell2 type FALL;
		explode flarel2 type FIRE | SMOKE | FALL;
		explode turretaa type FIRE | SMOKE | FALL;
		explode sleeveaa type FALL;
		explode flareaa1 type FIRE | SMOKE | FALL;
		explode flareaa2 type FIRE | SMOKE | FALL;
		explode flareaa3 type FIRE | SMOKE | FALL;
		explode flareaa4 type FIRE | SMOKE | FALL;
		explode flareaa5 type FIRE | SMOKE | FALL;
		explode flareaa6 type FIRE | SMOKE | FALL;
		explode flareaa7 type FALL;
		explode flareaa8 type FIRE | SMOKE | FALL;
		explode lightaa type FIRE | SMOKE | FALL;
		explode aimfromaa type FALL;
		explode aimy type FIRE | SMOKE | FALL;
		explode turretf type FALL;
		explode sleevef type FIRE | SMOKE | FALL;
		explode flaref type FIRE | SMOKE | FALL;
		return(0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY;
		explode thrustfl type SMOKE | FALL;
		explode thrustfla type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode thrustrl type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode thrustrla type EXPLODE_ON_HIT | SMOKE | FALL;
		explode thrustfr type SMOKE | FALL;
		explode thrustfra type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode thrustrr type FIRE | SMOKE | FALL;
		explode thrustrra type FIRE | SMOKE | FALL;
		explode turretr1 type EXPLODE_ON_HIT | SMOKE | FALL;
		explode sleever1 type FIRE | SMOKE | FALL;
		explode barrelr1 type EXPLODE_ON_HIT | SMOKE | FALL;
		explode flarer1 type EXPLODE_ON_HIT | SMOKE | FALL;
		explode turretl1 type FIRE | SMOKE | FALL;
		explode sleevel1 type SMOKE | FALL;
		explode barrell1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode flarel1 type FIRE | SMOKE | FALL;
		explode turretr2 type EXPLODE_ON_HIT | SMOKE | FALL;
		explode sleever2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode barrelr2 type SMOKE | FALL;
		explode flarer2 type FIRE | SMOKE | FALL;
		explode turretl2 type EXPLODE_ON_HIT | SMOKE | FALL;
		explode sleevel2 type SMOKE | FALL;
		explode barrell2 type SMOKE | FALL;
		explode flarel2 type EXPLODE_ON_HIT | SMOKE | FALL;
		explode turretaa type SMOKE | FALL;
		explode sleeveaa type EXPLODE_ON_HIT | SMOKE | FALL;
		explode flareaa1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode flareaa2 type SMOKE | FALL;
		explode flareaa3 type EXPLODE_ON_HIT | SMOKE | FALL;
		explode flareaa4 type SMOKE | FALL;
		explode flareaa5 type SMOKE | FALL;
		explode flareaa6 type EXPLODE_ON_HIT | SMOKE | FALL;
		explode flareaa7 type FIRE | SMOKE | FALL;
		explode flareaa8 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode lightaa type FIRE | SMOKE | FALL;
		explode aimfromaa type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode aimy type SMOKE | FALL;
		explode turretf type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode sleevef type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode flaref type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		return(0);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY;
		explode thrustfl type EXPLODE_ON_HIT | FIRE | FALL;
		explode thrustfla type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode thrustrl type EXPLODE_ON_HIT | FIRE | FALL;
		explode thrustrla type EXPLODE_ON_HIT | FIRE | FALL;
		explode thrustfr type EXPLODE_ON_HIT | FIRE | FALL;
		explode thrustfra type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode thrustrr type EXPLODE_ON_HIT | FIRE | FALL;
		explode thrustrra type EXPLODE_ON_HIT | FIRE | FALL;
		explode turretr1 type EXPLODE_ON_HIT | FIRE | FALL;
		explode sleever1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode barrelr1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode flarer1 type EXPLODE_ON_HIT | FIRE | FALL;
		explode turretl1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode sleevel1 type EXPLODE_ON_HIT | FIRE | FALL;
		explode barrell1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode flarel1 type EXPLODE_ON_HIT | FIRE | FALL;
		explode turretr2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode sleever2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode barrelr2 type EXPLODE_ON_HIT | FIRE | FALL;
		explode flarer2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode turretl2 type EXPLODE_ON_HIT | FIRE | FALL;
		explode sleevel2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode barrell2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode flarel2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode turretaa type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode sleeveaa type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode flareaa1 type EXPLODE_ON_HIT | FIRE | FALL;
		explode flareaa2 type EXPLODE_ON_HIT | FIRE | FALL;
		explode flareaa3 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode flareaa4 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode flareaa5 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode flareaa6 type EXPLODE_ON_HIT | FIRE | FALL;
		explode flareaa7 type EXPLODE_ON_HIT | FIRE | FALL;
		explode flareaa8 type EXPLODE_ON_HIT | FIRE | FALL;
		explode lightaa type EXPLODE_ON_HIT | FIRE | FALL;
		explode aimfromaa type EXPLODE_ON_HIT | FIRE | FALL;
		explode aimy type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode turretf type EXPLODE_ON_HIT | FIRE | FALL;
		explode sleevef type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode flaref type EXPLODE_ON_HIT | FIRE | FALL;
}